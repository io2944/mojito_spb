stages:
  - build
  - test
  - quality
  - sonarcloud
  - package

# Cache Maven local pour accélérer les builds
cache:
  key: "${CI_JOB_NAME}"
  paths:
    - .m2/repository

# -----------------------------
#  BUILD STAGE
# -----------------------------
build-job:
  stage: build
  image: maven:3.9-eclipse-temurin-25
  script:
    - echo " Compilation du projet..."
    - mvn -B clean compile
  artifacts:
    paths:
      - target/
    expire_in: 1 week

# -----------------------------
#  TEST STAGE
# -----------------------------
test-job:
  stage: test
  image: maven:3.9-eclipse-temurin-25
  services:
    - name: postgres:17
      alias: mojitodb
  variables:
    POSTGRES_DB: mojitodb
    POSTGRES_USER: user
    POSTGRES_PASSWORD: mdp
    SPRING_DATASOURCE_URL: jdbc:postgresql://mojitodb:5432/mojitodb
    SPRING_DATASOURCE_USERNAME: user
    SPRING_DATASOURCE_PASSWORD: mdp
  before_script:
    - apt-get update -qq && apt-get install -y -qq postgresql-client
    - echo "Waiting for PostgreSQL to be ready..."
    - until pg_isready -h mojitodb -p 5432; do sleep 2; done
    - echo " PostgreSQL is ready!"
  script:
    - echo " Lancement des tests Maven..."
    - mvn -B test
  artifacts:
    when: always
    reports:
      junit: target/surefire-reports/TEST-*.xml

# -----------------------------
#  CODE QUALITY STAGE
# -----------------------------
code_quality_job:
  stage: quality
  image: docker:27
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  allow_failure: true
  services:
    - name: docker:dind
      alias: docker
      entrypoint: ["dockerd-entrypoint.sh", "--tls=false"]
  script:
    - mkdir -p codequality-results
    - docker run --rm
        --env CODECLIMATE_CODE="$PWD"
        --volume "$PWD":/code
        --volume /var/run/docker.sock:/var/run/docker.sock
        --volume /tmp/cc:/tmp/cc
        codeclimate/codeclimate analyze -f html > ./codequality-results/index.html
  artifacts:
    paths:
      - codequality-results/
    expire_in: 1 week

# -----------------------------
#  SONARCLOUD STAGE
# -----------------------------
.sonarcloud-check:
  stage: sonarcloud
  image: maven:3.9-eclipse-temurin-25
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
    GIT_DEPTH: "0"
  script:
    - echo " Analyse SonarCloud..."
    - mvn verify sonar:sonar -Dsonar.projectKey=glft-szoEksYBzRTp3V9B7xVZ
  cache:
    key: "${CI_JOB_NAME}"

# -----------------------------
#  PACKAGE & DOCKER STAGE
# -----------------------------
package_job:
  stage: package
  image: docker:27
  services:
    - name: docker:dind
      alias: docker
      entrypoint: ["dockerd-entrypoint.sh", "--tls=false"]
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  script:
    - echo "Login to GitLab registry..."
    - docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $CI_REGISTRY
    - echo "Building Spring Boot image..."
    - mvn spring-boot:build-image -Dspring-boot.build-image.imageName=registry.gitlab.com/dumdia79/mojito_spb/mojito-app -Dcheckstyle.skip
    - echo "Pushing image to GitLab registry..."
    - docker push registry.gitlab.com/dumdia79/mojito_spb/mojito-app